I"	<p><img src="/uploads/2018/03/02/cf-tf-scope.png" alt="" /></p>

<p>I need to run my entire cloud architecture from a template. Now, there are a few options, some incredibly complicated and some simpler.</p>

<p>I am not changing infrastructure because Amazon Web Services is what I know, but that doesn’t mean I’m forced to use CloudFormation to write the infraestructure as code.</p>

<p>Yesterday I tried in many ways to automate my cloud (what’s behind www.maikel.uk) and I succeeded in many fields, for example now the entire setup is disposable and I can re-generate it in barely 2 minutes.</p>

<p>But I failed in finding an orchestrating tool. I tried to get it built with CloudFormation but it is incredibly cumbersome to use. So I asked the internet and Terraform is the way to go.</p>

<p>As shown <a href="https://www.terraform.io/intro/getting-started/build.html">here</a>, this is all you need to get an instance declared</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>provider "aws" {
  access_key = "ACCESS_KEY_HERE"
  secret_key = "SECRET_KEY_HERE"
  region     = "us-east-1"
}

resource "aws_instance" "example" {
  ami           = "ami-2757f631"
  instance_type = "t2.micro"
}
</code></pre></div></div>

<p>Save the file as anything.tf and the run “terraform apply”. That’s all it takes. Well, appart from getting your keys from AWS which is also explained in the link.</p>

<p>While with CloudFormation is more of:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      ImageId:
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - Ref: AWS::Region
        - Fn::FindInMap:
          - AWSInstanceType2Arch
          - Ref: InstanceType
          - Arch
</code></pre></div></div>

<p>Now, how is that understandable to any human or not error prone is a mystery to me.</p>

<p>Apart from being clearer, Terraform can work with many cloud providers. That means I can re-create my infrastructure elsewhere instead of being locked in AWS in the future.</p>

<p>Doing all this took me until 5am last night so today I’m knackered.</p>
:ET